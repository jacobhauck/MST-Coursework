>python -m gs
Test 1: random square matrix
Input matrix
[[0.58801452 0.69910875 0.18815196 0.04380856 0.20501895]
 [0.10606287 0.72724014 0.67940052 0.4738457  0.44829582]
 [0.01910695 0.75259834 0.60244854 0.96177758 0.66436865]
 [0.60662962 0.44915131 0.22535416 0.6701743  0.73576659]
 [0.25799564 0.09554215 0.96090974 0.25176729 0.28216512]]

Orthonormalized matrix
[[ 0.66075857  0.10599106 -0.32621454 -0.56072372 -0.36240445]
 [ 0.11918405  0.62410254  0.17611003 -0.29186203  0.69288743]
 [ 0.02147069  0.73799494  0.08061366  0.44264935 -0.50245942]
 [ 0.68167657 -0.1644837  -0.10793795  0.62668109  0.32230789]
 [ 0.28991262 -0.16604366  0.91892338 -0.10834125 -0.17950537]]

Implementation worked? True

Test 2: random non-square matrix
Input matrix
[[0.76825393 0.7979234  0.5440372 ]
 [0.38270763 0.38165095 0.28582739]
 [0.74026815 0.23898683 0.4377217 ]
 [0.8835387  0.28928114 0.78450686]
 [0.75895366 0.41778538 0.22576877]]

Orthonormalized matrix
[[ 0.47270878  0.73926285  0.17771326]
 [ 0.23548107  0.33566518  0.12907525]
 [ 0.45548905 -0.37843189 -0.14903895]
 [ 0.54364382 -0.44335429  0.57756706]
 [ 0.46698629 -0.03233593 -0.77198527]]

Implementation worked? True

Test 3: random matrix with too many columns
Input matrix
[[0.42009814 0.06436369 0.59643269 0.83732372 0.89248639]
 [0.20052744 0.50239523 0.89538184 0.25592093 0.86723234]
 [0.01648793 0.55249695 0.52790539 0.92335039 0.24594844]]

Matrix has linearly dependent columns (more columns than rows)

Test 4: matrix with first column 0
Input matrix
[[0 1 2]
 [0 3 4]
 [0 5 6]]

Matrix has linearly dependent or almost linearly dependent columns because first column is almost 0

Test 5: singular matrix
Input matrix
[[ 1  2 -1]
 [ 2  5 -3]
 [ 3  3  0]]

Aborting orthogonalization; matrix has linearly dependent or almost linearly dependent columns